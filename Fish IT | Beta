
local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Localization = WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "en",
    Translations = {
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration",
            ["SAVE_CONFIG"] = "Save Configuration",
            ["LOAD_CONFIG"] = "Load Configuration",
            ["THEME_SELECT"] = "Select Theme",
            ["TRANSPARENCY"] = "Window Transparency",
            ["LOCKED_TAB"] = "Locked Tab"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end


-- Ambil nama player
local player = game.Players.LocalPlayer
local playerName = player.Name
local playerDisplayName = player.DisplayName

-- Buat Window versi baru
local Window = WindUI:CreateWindow({
    Title = "Nexa - Premium",
    Icon = "rbxassetid://107488593993096",
    Author = "Fish IT! Script | @ Han",
    Folder = "Hanzo",
    Size = UDim2.fromOffset(540, 420),
    Transparent = true,
    Theme = "Dark",
    
    HidePanelBackground = true,
    NewElements = false,

    User = {
        Enabled = true,
        Anonymous = false,           -- false biar muncul nama asli
        Name = playerDisplayName,    -- Nama tampilan
        UserName = "@" .. playerName, -- Username Roblox
        Callback = function()
            WindUI:Notify({
                Title = "User Profile",
                Content = "User profile clicked!",
                Duration = 3
            })
        end
    },
    
    Acrylic = false,
    HideSearchBar = false,
    SideBarWidth = 200,
})

Window:Tag({
    Title = "v1.2.3",
    Color = Color3.fromHex("#30ff6a")
})


Window:EditOpenButton({
    Enabled = false
})

WindUI:Notify({
    Title = "Game Supported",
    Content = "Dig ðŸ”´, 99 Nights in the Forest ðŸ”´, Fish It ðŸŸ¢, Grow A Garden ðŸ”´",
    Icon = "gamepad",
    Duration = 6
})

task.delay(6.5, function()
    WindUI:Notify({
        Title = "Bug Report",
        Content = "If there are any errors, please let the developer know. Join Discord to report bugs.",
        Icon = "cloud-alert",
        Duration = 6
    })
end)

task.delay(13, function()
    WindUI:Notify({
        Title = "Purchase",
        Content = "If you want to buy this premium script key, join Discord to buy premium.",
        Icon = "shopping-cart",
        Duration = 6
    })
end)

-- âœ… Tab dan UI
local Tabs = {
    Home = Window:Tab({ Title = "Home", Icon = "house"  }),
    Active = Window:Tab({ Title = "Active", Icon = "info"  }),
    Farm = Window:Tab({ Title = "Farm", Icon = "fish"  }),
    Auto = Window:Tab({ Title = "Automaticaly", Icon = "repeat-2"  }),
    Shop = Window:Tab({ Title = "Shop", Icon = "shopping-cart"  }),
    Boat = Window:Tab({ Title = "Boat", Icon = "sailboat"  }),
    Player = Window:Tab({ Title = "Player", Icon = "user"  }),
    Teleport = Window:Tab({ Title = "Teleport", Icon = "map-pin"  }),
    Config  = Window:Tab({ Title = "Server", Icon = "server"  }),
}

Tabs.Home:Section({ Title = "Update" })

Tabs.Home:Divider()

Tabs.Home:Paragraph({
    Title = "Here's what's new:",
    Desc = [[
[+] Added Anti Lava
[/] Improve Auto Fish v2
[/] Rework Teleport Event & Status Ecent
[-] Delete Tab Visual
[/] Move Visual To Player Tab Place
    ]]
})

Tabs.Home:Section({ Title = "Server" })

Tabs.Home:Paragraph({
    Title = "Discord - Nexa | COMMUNITY",
    Desc = "Indonesia ðŸ‡®ðŸ‡©",
    Image = "https://images-eds-ssl.xboxlive.com/image?url=4rt9.lXDC4H_93laV1_eHHFT949fUipzkiFOBH3fAiZZUCdYojwUyX2aTonS1aIwMrx6NUIsHfUHSLzjGJFxxsG72wAo9EWJR4yQWyJJaDaK1XdUso6cUMpI9hAdPUU_FNs11cY1X284vsHrnWtRw7oqRpN1m9YAg21d_aNKnIo-&format=source",
    ImageSize = 20,
    Color = "Grey",
    Buttons = {
        {
            Title = "Copy Link",
            Icon = "copy",
            Variant = "Tertiary",
            Callback = function()
                setclipboard("discord.gg/ECxQFc97F5")
                WindUI:Notify({
                    Title = "Copied!",
                    Content = "Discord link copied to clipboard",
                    Duration = 2
                })
            end
        }
    }
})

Tabs.Active:Section({ Title = "Status" })

-- FPS, Ping, dan Lama di Server ke WindUI Paragraph

local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")

local displayFPS = 0
local accTime, accFrames = 0, 0
local smoothing = 0.15

-- Catat waktu join server
local joinTime = tick()

-- Buat Paragraph di tab Active
local statusParagraph = Tabs.Active:Paragraph({
    Title = "Status Player",
    Desc = "FPS: ...\nPing: ...\nTime: ..."
})

-- Fungsi format waktu (hh:mm:ss)
local function formatTime(seconds)
    local h = math.floor(seconds / 3600)
    local m = math.floor((seconds % 3600) / 60)
    local s = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", h, m, s)
end

-- Update tiap frame
RunService.RenderStepped:Connect(function(dt)
    accTime = accTime + dt
    accFrames = accFrames + 1

    if accTime >= 0.5 then
        local instantFPS = accFrames / accTime
        displayFPS = displayFPS + (instantFPS - displayFPS) * smoothing

        -- Ambil ping (ms)
        local ping = Stats.Network.ServerStatsItem["Data Ping"]:GetValue()

        -- Lama waktu di server
        local elapsed = tick() - joinTime
        local timePlayed = formatTime(elapsed)

        -- Update Paragraph WindUI
        statusParagraph:SetDesc(
            "FPS: " .. math.floor(displayFPS + 0.5) ..
            "\nPing: " .. math.floor(ping) .. " ms" ..
            "\nTime: " .. timePlayed
        )

        accTime = 0
        accFrames = 0
    end
end)

Tabs.Active:Section({ Title = "Info Event" })

local huntMap = {
    ["Shark Hunt"] = "Props 1",
    ["Model"] = "Props 2",
    ["Megalodon Hunt"] = "Props 3",
    ["Ghost Shark Hunt"] = "Props 4",
    ["Fishing Hunt"] = "Props 5",
}

task.spawn(function()
    while true do
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        if menuRings then
            local propsFolder = menuRings:FindFirstChild("Props")
                or menuRings:FindFirstChild("Props 1")
                or menuRings:FindFirstChild("Props 2")
                or menuRings:FindFirstChild("Props 3")
                or menuRings:FindFirstChild("Props 4")
                or menuRings:FindFirstChild("Props 5")

            if propsFolder then
                local renamed = false

                for childName, newName in pairs(huntMap) do
                    if propsFolder:FindFirstChild(childName) then
                        propsFolder.Name = newName
                        renamed = true
                        break
                    end
                end

                if not renamed then
                    propsFolder.Name = "Props"
                end
            end
        end

        task.wait(1)
    end
end)

local huntStatus = Tabs.Active:Paragraph({
    Title = "Hunt Status",
    Desc = "Checking..."
})

-- daftar props & nama hunt
local hunts = {
    ["Props 1"] = "Shark Hunt",
    ["Props 2"] = "Model", -- Worm Hunt
    ["Props 3"] = "Megalodon Hunt",
    ["Props 4"] = "Ghost Shark Hunt",
    ["Props 5"] = "Fishing Hunt",
}

-- referensi ke menu rings
local menuRings = workspace:FindFirstChild("!!! MENU RINGS")

-- fungsi update status
local function updateStatus()
    if not menuRings then return end

    local statusText = ""

    for i = 1, 5 do
        local propName = "Props " .. i
        local huntName = hunts[propName]
        local prop = menuRings:FindFirstChild(propName)
        local found = false

        if prop and huntName then
            if prop:FindFirstChild(huntName) then
                found = true
            end
        end

        -- Worm Hunt khusus (Props 2 â†’ "Model")
        if propName == "Props 2" then
            if prop and prop:FindFirstChild("Model") then
                found = true
            end
            statusText = statusText .. "Worm Hunt: " .. (found and "Spawned!" or "Not Found") .. "\n"
        else
            statusText = statusText .. hunts[propName] .. ": " .. (found and "Spawned!" or "Not Found") .. "\n"
        end
    end

    -- hapus newline terakhir
    statusText = statusText:sub(1, #statusText - 1)

    huntStatus:SetDesc(statusText)
end

-- update awal
updateStatus()

-- auto update kalau ada Props masuk/keluar menuRings
if menuRings then
    menuRings.ChildAdded:Connect(function(child)
        if string.match(child.Name, "Props") then
            updateStatus()
        end
    end)

    menuRings.ChildRemoved:Connect(function(child)
        if string.match(child.Name, "Props") then
            updateStatus()
        end
    end)

    -- auto update kalau child di dalam Props berubah (misalnya Hunt spawn/despawn)
    for i = 1, 5 do
        local prop = menuRings:FindFirstChild("Props " .. i)
        if prop then
            prop.ChildAdded:Connect(updateStatus)
            prop.ChildRemoved:Connect(updateStatus)
        end
    end
end

Tabs.Active:Section({ Title = "Event Hunt" })

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Variabel penyimpanan
local savePosition -- posisi awal sebelum teleport
local freezeBV, freezeBG
local selectedTargets = {} -- multi pilih
local isActive = false

-- Offset per event
local offsets = {
    ["Shark Hunt"] = Vector3.new(0, 4, 0),
    ["Worm Hunt"] = Vector3.new(0, 10, 0),
    ["Megalodon Hunt"] = Vector3.new(0, 4, 0),
    ["Ghost Shark Hunt"] = Vector3.new(0, 4, 0),
    ["Fishing Hunt"] = Vector3.new(0, 4, 0),
}

-- Target finder
local targets = {
    ["Shark Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 1")
        return props and props:FindFirstChild("Shark Hunt")
    end,
    ["Worm Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 2")
        return props and props:FindFirstChild("Model")
    end,
    ["Megalodon Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 3")
        return props and props:FindFirstChild("Megalodon Hunt")
    end,
    ["Ghost Shark Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 4")
        return props and props:FindFirstChild("Ghost Shark Hunt")
    end,
    ["Fishing Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 5")
        return props and props:FindFirstChild("Fishing Hunt")
    end,
}

-- Freeze player
local function ApplyFreeze()
    if freezeBV then freezeBV:Destroy() end
    if freezeBG then freezeBG:Destroy() end

    freezeBV = Instance.new("BodyVelocity")
    freezeBV.Velocity = Vector3.new(0, 0, 0)
    freezeBV.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    freezeBV.Parent = hrp

    freezeBG = Instance.new("BodyGyro")
    freezeBG.CFrame = hrp.CFrame
    freezeBG.D = 10
    freezeBG.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
    freezeBG.Parent = hrp
end

local function RemoveFreeze()
    if freezeBV then freezeBV:Destroy() freezeBV = nil end
    if freezeBG then freezeBG:Destroy() freezeBG = nil end
end

-- Cari target aktif pertama dari selectedTargets
local function FindActiveTarget()
    for _, name in ipairs(selectedTargets) do
        local getTarget = targets[name]
        if getTarget then
            local model = getTarget()
            if model then
                return name, model
            end
        end
    end
    return nil, nil
end

-- Fungsi teleport loop
local function TeleportLoop()
    task.spawn(function()
        while isActive do
            local eventName, targetModel = FindActiveTarget()
            if eventName and targetModel then
                local offset = offsets[eventName] or Vector3.new(0, 10, 0)
                hrp.CFrame = targetModel:GetPivot() + offset
                ApplyFreeze()

                -- Tunggu sampai model hilang
                repeat
                    task.wait(1)
                until not isActive or not targets[eventName]() -- model hilang

                RemoveFreeze()
                if isActive and savePosition then
                    hrp.CFrame = savePosition -- kembali ke posisi awal
                end
            else
                task.wait(1) -- tunggu lagi sampai ada hunt aktif
            end
        end
    end)
end

-- Update ulang saat respawn
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = character:WaitForChild("HumanoidRootPart")
    if isActive then
        task.delay(1, TeleportLoop)
    end
end)

-- Dropdown multi pilihan event
Tabs.Active:Dropdown({
    Title = "Select Events",
    Values = {
        "Shark Hunt",
        "Worm Hunt",
        "Megalodon Hunt",
        "Ghost Shark Hunt",
        "Fishing Hunt",
    },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedTargets = options
    end
})

-- Toggle Teleport
Tabs.Active:Toggle({
    Title = "Teleport To Events",
    Value = false,
    Callback = function(state)
        isActive = state
        if state then
            savePosition = hrp.CFrame -- simpan posisi awal saat toggle ON
            TeleportLoop()
        else
            RemoveFreeze()
            if savePosition then
                hrp.CFrame = savePosition
            end
        end
    end
})

-- Button manual untuk Save Position
Tabs.Active:Button({
    Title = "Save Position",
    Desc = "If you want to teleport to an event, you have to save your position first so you can return to your starting position.",
    Callback = function()
        savePosition = hrp.CFrame
    end
})

Tabs.Farm:Section({ Title = "Info Fish!!" })

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- UI Notif
local smallNotif = playerGui:WaitForChild("Small Notification")
local display = smallNotif:WaitForChild("Display")
local container = display:WaitForChild("Container")

local notifications = playerGui:WaitForChild("Text Notifications")
local frame = notifications:WaitForChild("Frame")

-- posisi default (before) dan sukses
local beforePos = UDim2.new(0.5, 0, -1.89999998, 0)
local successPos = UDim2.new(0.5, 0, 0.100000001, 0)

-- counter sukses & gagal
local successCount = 0
local failCount = 0

-- satu paragraph gabungan
local ProgressParagraph = Tabs.Farm:Paragraph({
    Title = "Fishing Attempts",
    Desc = "Success: 0\nFailed: 0"
})

-- update text paragraph
local function updateParagraph()
    ProgressParagraph:SetDesc("Success: " .. successCount .. "\nFailed: " .. failCount)
end

-- === SUCCESS DETECTION (berdasarkan posisi container) ===
container:GetPropertyChangedSignal("Position"):Connect(function()
    local pos = container.Position

    if pos == successPos then
        successCount += 1
        updateParagraph()
    end
end)

-- === FAIL DETECTION (berdasarkan notifikasi text) ===
frame.ChildAdded:Connect(function(child)
    if child.Name == "TextTile" then
        local header = child:WaitForChild("Header", 5)
        if header and header:IsA("TextLabel") then
            if header.Text == "The fish got away!" then
                failCount += 1
                updateParagraph()
            end

            -- listen kalau text berubah setelah spawn
            header:GetPropertyChangedSignal("Text"):Connect(function()
                if header.Text == "The fish got away!" then
                    failCount += 1
                    updateParagraph()
                end
            end)
        end
    end
end)

Tabs.Farm:Section({ Title = "Fishing" })

Tabs.Farm:Paragraph({
    Title = "loc:Pesan Developer",
    Desc = "loc:Kalau ada bug di Auto Fish v2, pakai Auto Fish v1 saja. Sudah di-fix bug tapi masih sama saja."
})

-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local fishingGui = playerGui:WaitForChild("Fishing")
local mainFrame = fishingGui:WaitForChild("Main")
local vim = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera

-- Default settings
local beforePosition = UDim2.new(0.5, 0, 1.5, 0)  -- posisi awal Main
local delayTime = 0.1  -- default delay klik (detik)
local toggleState = false  -- status toggle dari UI

-- Mapping dropdown ke delay
local delayMapping = {
    Slow = 0.8,
    Normal = 0.1,
    Fast = 0.05,
    ["Super Fast"] = 0.005,
    ["God Speed"] = 0.0001 
}

-- ==========================
-- WindUI Dropdown: Atur Delay Klik
-- ==========================
Tabs.Farm:Dropdown({
    Title = "Click Speed",
    Values = {"Slow", "Normal", "Fast", "Super Fast", "God Speed"},
    Value = "Slow", -- default
    Callback = function(option)
        delayTime = delayMapping[option] or 0.1
    end
})

-- ==========================
-- WindUI Toggle: Auto Fishing
-- ==========================
Tabs.Farm:Toggle({ 
    Title = "Auto Fish v1",
    Desc = "You must be at least level 3",
    Value = false,
    Callback = function(state)
        -- Simpan status toggle
        toggleState = state

        -- Kirim status Auto Fishing ke server
        local args = { state }
        game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/UpdateAutoFishingState")
            :InvokeServer(unpack(args))
    end
})

-- ==========================
-- Loop cek posisi Main & Auto Click ke UDim2 target
-- ==========================
task.spawn(function()
    while true do
        task.wait(delayTime)

        -- Hanya jalan kalau toggle aktif DAN posisi Main berubah
        if toggleState and mainFrame.Position ~= beforePosition then
            local screenSize = camera.ViewportSize
            local target = UDim2.new(0.88, 0, 0.89, -20)

            -- konversi ke pixel
            local targetX = (screenSize.X * target.X.Scale) + target.X.Offset
            local targetY = (screenSize.Y * target.Y.Scale) + target.Y.Offset

            -- klik
            vim:SendMouseButtonEvent(targetX, targetY, 0, true, game, 0)  -- down
            vim:SendMouseButtonEvent(targetX, targetY, 0, false, game, 0) -- up
        end
    end
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Net = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")

local player = game.Players.LocalPlayer
local container = player:WaitForChild("PlayerGui")
    :WaitForChild("Small Notification")
    :WaitForChild("Display")
    :WaitForChild("Container")

local initialPos = UDim2.new(0.5, 0, -1.9, 0)

local AutoFish = false
local FishMode = "PERFECT"
local runningCycle = false -- mencegah tumpukan siklus

-- Step 1 â†’ Charge Fishing Rod
local function Step1()
    Net:WaitForChild("RF/ChargeFishingRod"):InvokeServer(os.clock())
end

-- Step 2 â†’ Start Fishing Minigame
local function Step2()
    local args
    if FishMode == "PERFECT" then
        args = { -0.75, 0.9949902531063812 }
    elseif FishMode == "OK" then
        args = { -0.75, 0.3251698002015836 }
    elseif FishMode == "AMAZING" then
        args = { -0.5718746185302734, 0.8702929274284 }
    elseif FishMode == "GREAT" then
        args = { -0.5718746185302734, 0.744264094698844 }
    else
        args = { -0.75, 0.9949902531063812 }
    end
    Net:WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(unpack(args))
end

-- Step 4 â†’ Reset rod cepat
local function Step4()
    Net:WaitForChild("RE/UnequipToolFromHotbar"):FireServer()
    task.wait(0.01)
    Net:WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)
    task.wait(0.01)
end

-- Step 3 â†’ Tunggu container berubah atau timeout
local function Step3(callback)
    local connection
    local finished = false

    connection = container:GetPropertyChangedSignal("Position"):Connect(function()
        if container.Position ~= initialPos and not finished then
            finished = true
            connection:Disconnect()
            callback() -- lanjut Step4
        end
    end)

    -- Timeout 7 detik
    task.delay(7, function()
        if not finished then
            finished = true
            if connection and connection.Connected then
                connection:Disconnect()
            end
            -- Container ga berubah â†’ cancel fishing inputs
            Net:WaitForChild("RF/CancelFishingInputs"):InvokeServer()
            callback() -- lanjut Step4
        end
    end)
end

-- Jalankan siklus Auto Fish (serial)
function RunCycle()
    if runningCycle then return end
    runningCycle = true

    task.spawn(function()
        while AutoFish do
            -- Step1
            Step1()
            task.wait(0.001)

            -- Step2
            Step2()

            -- Step3 + Step4
            local step3Finished = false
            Step3(function()
                Step4()
                step3Finished = true
            end)

            -- Tunggu Step3+Step4 selesai sebelum ulang loop
            repeat task.wait() until step3Finished

            -- Delay kecil agar tidak spam server
            task.wait(0.001)
        end
        runningCycle = false
    end)
end

-- UI Dropdown
Tabs.Farm:Dropdown({ 
    Title = "Choose Charge Mode", 
    Values = { "PERFECT", "OK", "AMAZING", "GREAT"}, 
    Value = "PERFECT", 
    Callback = function(option) 
        FishMode = option
    end
})

-- UI Toggle
Tabs.Farm:Toggle({
    Title = "Auto Fish v2",
    Value = false,
    Callback = function(state)
        AutoFish = state
        if state then
            RunCycle()
        end
    end
})

Tabs.Farm:Button({
    Title = "Cancel Fishing",
    Desc = "If there is a bug or stuck, click this to cancel and restart Fishv2 auto.",
    Callback = function()
        -- Panggil RemoteFunction CancelFishingInputs
        game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/CancelFishingInputs")
            :InvokeServer()

        -- Notifikasi
        WindUI:Notify({
            Title = "Fishing Cancelled",
            Content = "You can now restart Fishv2 Auto.",
            Duration = 5,
        })
    end
})


Tabs.Farm:Toggle({
    Title = "Auto Fishing Completed",
    Value = false,
    Callback = function(state)
        if state then
            -- Aktifkan loop auto fishing
            getgenv().AutoFishing = true
            task.spawn(function()
                while getgenv().AutoFishing do
                    pcall(function()
                        game:GetService("ReplicatedStorage")
                            :WaitForChild("Packages")
                            :WaitForChild("_Index")
                            :WaitForChild("sleitnick_net@0.2.0")
                            :WaitForChild("net")
                            :WaitForChild("RE/FishingCompleted")
                            :FireServer()
                    end)
                    task.wait(0.1) -- delay biar server nggak ke-spam terlalu cepat
                end
            end)
        else
            -- Matikan loop auto fishing
            getgenv().AutoFishing = false
        end
    end
})


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remote events
local Net = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
local EquipRemote = Net:WaitForChild("RE/EquipToolFromHotbar")
local UnequipRemote = Net:WaitForChild("RE/UnequipToolFromHotbar")

local equipLoop = nil

Tabs.Farm:Toggle({
    Title = "Auto Equip Rod",
    Desc = "Automatically equips your fishing rod in slot 1 and unequips it when turned off",
    Value = false,
    Callback = function(state)
        local char = workspace:WaitForChild("Characters"):WaitForChild(LocalPlayer.Name)

        if state then
            -- Mulai loop auto-equip
            equipLoop = task.spawn(function()
                while task.wait(1) do
                    -- Kalau masih ada !!!FISHING_VIEW_MODEL!!! berarti rod BELUM dipegang â†’ equip
                    if char:FindFirstChild("!!!FISHING_VIEW_MODEL!!!") then
                        EquipRemote:FireServer(1)
                    end
                end
            end)
        else
            -- Hentikan loop
            if equipLoop then
                task.cancel(equipLoop)
                equipLoop = nil
            end

            -- Langsung unequip
            UnequipRemote:FireServer()
        end
    end
})

-- Variabel global
local savedCFrame = nil
local teleportEnabled = false

-- Tombol Save Position
Tabs.Farm:Button({ 
    Title = "Save Position", 
    Callback = function() 
        local player = game.Players.LocalPlayer
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            savedCFrame = hrp.CFrame -- simpan CFrame lengkap (posisi + arah)
            WindUI:Notify({
                Title = "Saved",
                Content = "Posisi berhasil disimpan!",
                Duration = 5,
            })
        else
            WindUI:Notify({
                Title = "Error",
                Content = "Karakter belum siap!",
                Duration = 5,
            })
        end
    end
})

-- Fungsi Freeze dan kembalikan ke posisi
local function freezeCharacter()
    local player = game.Players.LocalPlayer
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp or not savedCFrame then return end

    -- BodyVelocity & BodyGyro
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
    bv.Velocity = Vector3.new(0,0,0)
    bv.Parent = hrp

    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
    bg.CFrame = savedCFrame
    bg.Parent = hrp

    -- Loop freeze & check distance
    spawn(function()
        while teleportEnabled and hrp and hrp.Parent do
            local distance = (hrp.Position - savedCFrame.Position).Magnitude
            if distance > 2 then
                hrp.CFrame = savedCFrame
            end
            task.wait(0.1)
        end
        -- Hapus BV & BG saat toggle dimatikan
        if bv then bv:Destroy() end
        if bg then bg:Destroy() end
    end)
end

-- Toggle Teleport + Freeze
Tabs.Farm:Toggle({ 
    Title = "Teleport to Saved Position", 
    Value = false,
    Callback = function(state) 
        teleportEnabled = state
        if teleportEnabled then
            freezeCharacter()
        end
    end
})

Tabs.Farm:Section({ Title = "Sell" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local sellRemote = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/SellAllItems")

local autoSell = false
local sellDelay = 2 -- default delay
local mode = "Sell Delay" -- default mode

-- Slider untuk delay
Tabs.Farm:Slider({
    Title = "Sell Delay (seconds)",
    Step = 1,
    Value = {
        Min = 1,
        Max = 30,
        Default = 2,
    },
    Callback = function(value)
        sellDelay = value
    end
})

-- Dropdown untuk mode
Tabs.Farm:Dropdown({
    Title = "Select Mode",
    Values = { "Backpack Full", "Sell Delay" },
    Value = "Sell Delay",
    Callback = function(option)
        mode = option
    end
})

-- Toggle auto sell
Tabs.Farm:Toggle({
    Title = "Auto Sell All Items",
    Default = false,
    Callback = function(state)
        autoSell = state
        if autoSell then
            task.spawn(function()
                while autoSell do
                    pcall(function()
                        if mode == "Sell Delay" then
                            sellRemote:InvokeServer()
                            task.wait(sellDelay)
                        elseif mode == "Backpack Full" then
                            local bagLabel = LocalPlayer.PlayerGui.Inventory.Main.Top.Options.Fish.Label.BagSize
                            if bagLabel and bagLabel.Text == "5,000/5,000" then
                                sellRemote:InvokeServer()
                            end
                            task.wait(1)
                        end
                    end)
                end
            end)
        end
    end
})

---------------------------------------------------------------------
-- AUTO SAVE CONFIG SYSTEM (FIXED)
---------------------------------------------------------------------
local configName = "default"
local configFile = nil
local MyPlayerData = {
    name = "Player1",
    level = 1,
    inventory = { "sword", "shield", "potion" }
}

local ConfigManager = Window.ConfigManager
if ConfigManager then
    ConfigManager:Init(Window)
    configFile = ConfigManager:CreateConfig(configName)

    -- Daftarkan elemen yang mau disimpan
    configFile:Register("featureToggle", featureToggle)
    configFile:Register("intensitySlider", intensitySlider)
    configFile:Register("testDropdown", testDropdown)
    configFile:Register("themeDropdown", themeDropdown)
    configFile:Register("transparencySlider", transparencySlider)

    -- Fungsi auto save
    local function AutoSave()
        if not configFile then return end
        configFile:Set("playerData", MyPlayerData)
        configFile:Set("lastSave", os.date("%Y-%m-%d %H:%M:%S"))
        configFile:Save()
        print("[AutoSave] Config auto-saved:", configName)
    end

    -- Auto Load saat script dijalankan
    local loadedData = configFile:Load()
    if loadedData then
        MyPlayerData = loadedData.playerData or MyPlayerData
        WindUI:Notify({
            Title = "Auto Load",
            Content = "Loaded last config: "..configName,
            Duration = 3
        })
    end

    -- Auto Save tiap ada perubahan
    featureToggle.Callback = function(state) AutoSave() end
    intensitySlider.Callback = function(value) AutoSave() end
    testDropdown.Callback = function(option) AutoSave() end
    themeDropdown.Callback = function(theme) AutoSave() end
    transparencySlider.Callback = function(value) AutoSave() end

    -- Tombol manual Save
    Tabs.Config:Button({
        Title = "loc:SAVE_CONFIG",
        Icon = "save",
        Variant = "Primary",
        Callback = function()
            AutoSave()
            WindUI:Notify({
                Title = "Config Saved",
                Content = "Saved as: "..configName,
                Icon = "check",
                Duration = 3
            })
        end
    })

    -- Tombol manual Load
    Tabs.Config:Button({
        Title = "loc:LOAD_CONFIG",
        Icon = "folder",
        Callback = function()
            local loaded = configFile:Load()
            if loaded then
                WindUI:Notify({
                    Title = "Config Loaded",
                    Content = "Loaded: "..configName,
                    Icon = "refresh-cw",
                    Duration = 3
                })
            else
                WindUI:Notify({
                    Title = "Error",
                    Content = "Failed to load config",
                    Icon = "x",
                    Duration = 3
                })
            end
        end
    })

    -- Save otomatis ketika window ditutup
    Window:OnClose(function()
        AutoSave()
        print("[AutoSave] Window closed, config saved.")
    end)
else
    Tabs.Config:Paragraph({
        Title = "Config Manager Not Available",
        Desc = "WindUI ConfigManager required",
        Image = "alert-triangle"
    })
end
---------------------------------------------------------------------
