local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Localization = WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "en",
    Translations = {
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration",
            ["SAVE_CONFIG"] = "Save Configuration",
            ["LOAD_CONFIG"] = "Load Configuration",
            ["THEME_SELECT"] = "Select Theme",
            ["TRANSPARENCY"] = "Window Transparency",
            ["LOCKED_TAB"] = "Locked Tab"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end


-- Ambil nama player
local player = game.Players.LocalPlayer
local playerName = player.Name
local playerDisplayName = player.DisplayName

-- Buat Window versi baru
local Window = WindUI:CreateWindow({
    Title = "Nexa - Free",
    Icon = "rbxassetid://107488593993096",
    Author = "Plants Vs Brainrots Script | @ Han",
    Folder = "Hanzo",
    Size = UDim2.fromOffset(540, 420),
    Transparent = true,
    Theme = "Dark",
    
    HidePanelBackground = true,
    NewElements = false,

    User = {
        Enabled = true,
        Anonymous = false,           -- false biar muncul nama asli
        Name = playerDisplayName,    -- Nama tampilan
        UserName = "@" .. playerName, -- Username Roblox
        Callback = function()
            WindUI:Notify({
                Title = "User Profile",
                Content = "User profile clicked!",
                Duration = 3
            })
        end
    },
    
    Acrylic = false,
    HideSearchBar = false,
    SideBarWidth = 200,
})

Window:Tag({
    Title = "v0.0.1",
    Color = Color3.fromHex("#30ff6a")
})


Window:EditOpenButton({
    Enabled = false
})

-- Ganti dengan UserId target
local TargetUserId = 5464154339 -- masukkan UserId yang ingin diberi notifikasi

-- Event ketika player join
game.Players.PlayerAdded:Connect(function(player)
    if player.UserId == TargetUserId then
        -- Notifikasi WindUI
        WindUI:Notify({
            Title = "Nexa Notify",
            Content = player.Name .. " Developer Script Nexa Hub has joined the game!",
            Duration = 5,
        })
    end
end)

task.delay(6.5, function()
    WindUI:Notify({
        Title = "Bug Report",
        Content = "If there are any errors, please let the developer know. Join Discord to report bugs.",
        Icon = "cloud-alert",
        Duration = 6
    })
end)

task.delay(13, function()
    WindUI:Notify({
        Title = "Purchase",
        Content = "If you want to buy this premium script key, join Discord to buy premium.",
        Icon = "shopping-cart",
        Duration = 6
    })
end)

local Tabs = {
    Home = Window:Tab({ Title = "Home", Icon = "house"  }),
    Farm = Window:Tab({ Title = "Farm", Icon = "swords"  }),
    Shop = Window:Tab({ Title = "Shop", Icon = "shopping-cart"  }),
    Inventory = Window:Tab({ Title = "Inventory", Icon = "backpack"  }),
    Auto = Window:Tab({ Title = "Automaticaly", Icon = "repeat-2"  }),
}

Tabs.Home:Section({ Title = "Update" })

Tabs.Home:Paragraph({
    Title = "Here's what's new:",
    Desc = [[
[/] Improve Auto Attack
[/] Fixed Auto Collect
[/] FIxed Auto Buy Seed, Gear, Platform, Rows
[/] Fixed Auto Plant & Remove Plant
    ]]
})

Tabs.Home:Section({ Title = "Server" })

Tabs.Home:Paragraph({
    Title = "Discord - Nexa | COMMUNITY",
    Desc = "Indonesia ðŸ‡®ðŸ‡©",
    Image = "https://images-eds-ssl.xboxlive.com/image?url=4rt9.lXDC4H_93laV1_eHHFT949fUipzkiFOBH3fAiZZUCdYojwUyX2aTonS1aIwMrx6NUIsHfUHSLzjGJFxxsG72wAo9EWJR4yQWyJJaDaK1XdUso6cUMpI9hAdPUU_FNs11cY1X284vsHrnWtRw7oqRpN1m9YAg21d_aNKnIo-&format=source",
    ImageSize = 20,
    Color = "Grey",
    Buttons = {
        {
            Title = "Copy Link",
            Icon = "copy",
            Variant = "Tertiary",
            Callback = function()
                setclipboard("discord.gg/ECxQFc97F5")
                WindUI:Notify({
                    Title = "Copied!",
                    Content = "Discord link copied to clipboard",
                    Duration = 2
                })
            end
        }
    }
})

Tabs.Farm:Section({ Title = "Brainrot Farm" })

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local Brainrots = workspace:WaitForChild("ScriptedMap"):WaitForChild("Brainrots")

local teleportEnabled = false -- status toggle

-- Fungsi teleport ke Brainrot aktif (Model)
local function teleportToBrainrot()
    -- Cari Brainrot yang ada/aktif
    local target
    for _, brainrot in ipairs(Brainrots:GetChildren()) do
        if brainrot:IsA("Model") then
            target = brainrot
            break
        end
    end

    if target then
        local pivotCFrame = target:GetPivot()
        humanoidRootPart.CFrame = pivotCFrame + Vector3.new(0, -1, 1)
    end
end

-- Loop teleport (cek toggle)
task.spawn(function()
    while task.wait(0.0001) do -- pakai wait lebih aman, 0.001 terlalu cepat
        if teleportEnabled then
            teleportToBrainrot()
        end
    end
end)

-- WindUI Toggle
Tabs.Farm:Toggle({ 
    Title = "Teleport to Brainrot", 
    Value = false,
    Callback = function(state) 
        teleportEnabled = state
    end
})


-- Attack
local autoAttackEnabled = false
local maxTargets = 3 -- ðŸ”¹ jumlah Brainrot yg diserang sekaligus (ubah sesuai kebutuhan)

Tabs.Farm:Toggle({ 
    Title = "Auto Attack Brainrot", 
    Value = false,
    Callback = function(state)
        autoAttackEnabled = state
    end
})

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local WeaponAttack = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AttacksServer"):WaitForChild("WeaponAttack")
local Brainrots = workspace:WaitForChild("ScriptedMap"):WaitForChild("Brainrots")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

-- Hitung jarak antar part
local function getDistance(part1, part2)
    return (part1.Position - part2.Position).Magnitude
end

-- Ambil Part utama dari Brainrot
local function getBrainrotPart(brainrot)
    for _, part in ipairs(brainrot:GetChildren()) do
        if part:IsA("BasePart") then
            return part
        end
    end
    return nil
end

-- Cari beberapa Brainrot terdekat
local function getClosestBrainrots(maxCount)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return {} end

    local brainrotList = {}

    for _, brainrot in ipairs(Brainrots:GetChildren()) do
        if brainrot:IsA("Model") then
            local targetPart = getBrainrotPart(brainrot)
            if targetPart then
                table.insert(brainrotList, {
                    model = brainrot,
                    dist = getDistance(hrp, targetPart)
                })
            end
        end
    end

    table.sort(brainrotList, function(a, b)
        return a.dist < b.dist
    end)

    local result = {}
    for i = 1, math.min(maxCount, #brainrotList) do
        table.insert(result, brainrotList[i].model.Name)
    end

    return result
end

-- Serang banyak Brainrot
local function attackBrainrots(brainrotNames)
    if #brainrotNames > 0 then
        WeaponAttack:FireServer(brainrotNames)
    end
end

-- Loop auto attack
task.spawn(function()
    while task.wait(0.01) do
        if autoAttackEnabled then
            local targets = getClosestBrainrots(maxTargets)
            attackBrainrots(targets)
        end
    end
end)

Tabs.Farm:Section({ Title = "Collect" })

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- cari plot kita
local myDisplayName = player.DisplayName
local plots = workspace:WaitForChild("Plots")

local myPlot = nil
for _, plot in pairs(plots:GetChildren()) do
    local sign = plot:FindFirstChild("PlayerSign")
    if sign then
        local billboard = sign:FindFirstChild("BillboardGui")
        if billboard then
            local label = billboard:FindFirstChild("TextLabel")
            if label and label:IsA("TextLabel") then
                if label.Text == myDisplayName then
                    myPlot = plot
                    break
                end
            end
        end
    end
end
if not myPlot then return end

local brainrots = myPlot:WaitForChild("Brainrots")

-- Atur speed jalan
humanoid.WalkSpeed = 50

-- Variabel kontrol
local autoCollect = false
local collectDelay = 1

-- Fungsi untuk jalan ke model
local function walkTo(model)
    if not model then return end
    local part = model:FindFirstChildWhichIsA("BasePart", true)
    if part then
        humanoid:MoveTo(part.Position + Vector3.new(0, 3, 0))
        humanoid.MoveToFinished:Wait()
    end
end

-- Fungsi utama auto jalan
task.spawn(function()
    while task.wait() do
        if autoCollect then
            -- loop selama toggle aktif
            for i = 1, 9 do
                if not autoCollect then break end
                local model = brainrots:FindFirstChild(tostring(i))
                if model then
                    walkTo(model)
                end
            end
            -- selesai 1 â†’ 9, tunggu sesuai slider
            if autoCollect then
                task.wait(collectDelay)
            end
        end
    end
end)

-- UI
Tabs.Farm:Slider({
    Title = "Collect Delay",
    Step = 1,
    Value = {
        Min = 1,
        Max = 100,
        Default = 1,
    },
    Callback = function(value)
        collectDelay = value
    end
})

Tabs.Farm:Toggle({
    Title = "Auto Collect",
    Value = false,
    Callback = function(state)
        autoCollect = state
    end
})

Tabs.Shop:Section({ Title = "Seed" })

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- ðŸ”¹ Daftar seed
local seedList = {
    "Cactus Seed",
    "Strawberry Seed",
    "Pumpkin Seed",
    "Sunflower Seed",
    "Dragon Fruit Seed",
    "Eggplant Seed",
    "Watermelon Seed",
    "Cocotank Seed",
    "Carnivorous Plant Seed",
    "Mr Carrot Seed",
    "Tomatrio Seed",
    "Shroombino Seed"
}

-- ðŸ”¹ Status toggle & pilihan seed
local autoBuyEnabled = false
local selectedSeeds = {}

-- ðŸ”¹ Fungsi loop auto buy
local function startAutoBuy()
    spawn(function()
        while autoBuyEnabled do
            for _, seedName in ipairs(selectedSeeds) do
                -- Remote Event: pakai "\b"
                local args = { { seedName, "\b" } }
                dataRemoteEvent:FireServer(unpack(args))
                task.wait(0.5) -- delay antar pembelian
            end
            task.wait(1) -- delay per cycle
        end
    end)
end

-- ðŸ”¹ Dropdown multi pilih seed
Tabs.Shop:Dropdown({
    Title = "Select Seeds",
    Values = seedList,
    Value = {}, -- default kosong
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedSeeds = options
        print("Seeds selected: " .. HttpService:JSONEncode(options))
    end
})

-- ðŸ”¹ Toggle auto buy
Tabs.Shop:Toggle({
    Title = "Auto Buy Selected Seeds",
    Value = false,
    Callback = function(state)
        autoBuyEnabled = state
        if state then
            startAutoBuy()
        end
    end
})

Tabs.Shop:Section({ Title = "Gear" })

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- ðŸ”¹ Daftar gear/items
local gearList = {
    "Water Bucket",
    "Frost Grenade",
    "Banana Gun",
    "Frost Blower",
    "Carrot Launcher"
}

-- ðŸ”¹ Status toggle & pilihan gear
local autoBuyEnabled = false
local selectedGear = {}

-- ðŸ”¹ Fungsi loop auto buy gear
local function startAutoBuy()
    spawn(function()
        while autoBuyEnabled do
            for _, gearName in ipairs(selectedGear) do
                -- Remote Event: pakai "\026"
                local args = {
                    { gearName, "\026" }
                }
                dataRemoteEvent:FireServer(unpack(args))
                task.wait(0.5) -- delay antar pembelian
            end
            task.wait(1) -- delay per cycle
        end
    end)
end

-- ðŸ”¹ Dropdown multi pilih gear
Tabs.Shop:Dropdown({
    Title = "Select Gear",
    Values = gearList,
    Value = {}, -- default kosong
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedGear = options
        print("Gear selected: " .. HttpService:JSONEncode(options))
    end
})

-- ðŸ”¹ Toggle auto buy gear
Tabs.Shop:Toggle({
    Title = "Auto Buy Selected Gear",
    Value = false,
    Callback = function(state)
        autoBuyEnabled = state
        if state then
            startAutoBuy()
        end
    end
})

Tabs.Shop:Section({ Title = "Platform" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remote = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- ðŸ”¹ Simpan pilihan platform
local selectedPlatforms = {}

-- Dropdown multi select untuk pilih platform
Tabs.Shop:Dropdown({ 
    Title = "Select Platform To Buy",  
    Values = { "1","2","3","4","5","6","7","8","9" }, 
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option) 
        selectedPlatforms = option
    end
})

-- Toggle auto buy
local autoBuy = false
Tabs.Shop:Toggle({ 
    Title = "Auto Buy Platform",  
    Value = false,
    Callback = function(state) 
        autoBuy = state

        task.spawn(function()
            while autoBuy do
                if #selectedPlatforms > 0 then
                    for _, platformId in ipairs(selectedPlatforms) do
                        local args = {
                            { tostring(platformId), "," }
                        }
                        Remote:FireServer(unpack(args))
                        task.wait(0.2)
                    end
                end
                task.wait(1)
            end
        end)
    end
})

Tabs.Shop:Section({ Title = "Rows" })

local HttpService = game:GetService("HttpService")
local Remote = game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local selectedRows = { "1" } -- default
local autoBuyEnabled = false

-- Dropdown pilih row
Tabs.Shop:Dropdown({
    Title = "Select Rows",
    Values = { "1","2","3","4","5","6","7" },
    Value = { "1" },
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        selectedRows = option
    end
})

-- Toggle auto buy
Tabs.Shop:Toggle({
    Title = "Auto Buy Plant Rows",
    Value = false,
    Callback = function(state)
        autoBuyEnabled = state
    end
})

-- Loop auto buy
spawn(function()
    while true do
        wait(1) -- delay 1 detik, bisa diubah sesuai kebutuhan
        if autoBuyEnabled and #selectedRows > 0 then
            for _, row in ipairs(selectedRows) do
                local args = { { tonumber(row), "\t" } } -- format sesuai server
                Remote:FireServer(unpack(args))
            end
        end
    end
end)

Tabs.Inventory:Section({ Title = "Sell" })

-- Variable global
AutoSellEnabled = false
AutoSellDelay = 1
AutoSellMode = "Delay" -- default mode: "Delay" atau "Full"

-- Dropdown untuk memilih mode Auto Sell
Tabs.Inventory:Dropdown({
    Title = "Auto Sell Mode",
    Values = { "Delay", "Inventory Full" },
    Value = "Delay",
    Callback = function(option)
        AutoSellMode = option

    end
})

-- Slider untuk delay
Tabs.Inventory:Slider({
    Title = "Auto Sell Delay", 
    Step = 1, 
    Value = {
        Min = 1, 
        Max = 100,
        Default = 1, 
    },
    Callback = function(value)
        AutoSellDelay = value
    end
})

-- Toggle Auto Sell
Tabs.Inventory:Toggle({ 
    Title = "Auto Sell", 
    Value = false,
    Callback = function(state)
        AutoSellEnabled = state
        if state then
            spawn(function()
                while AutoSellEnabled do
                    if AutoSellMode == "Delay" then
                        -- fire server sesuai delay
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ItemSell"):FireServer()
                        wait(AutoSellDelay)
                    elseif AutoSellMode == "Inventory Full" then
                        -- Cek notifikasi tas penuh
                        local player = game:GetService("Players").LocalPlayer
                        local notifGui = player:WaitForChild("PlayerGui"):WaitForChild("Notifications"):WaitForChild("Notifications")
                        local notification = notifGui:FindFirstChild("Notification")
                        if notification and notification.Text:match("Your inventory is full!") then
                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ItemSell"):FireServer()
                        end
                        wait(0.5) -- delay kecil biar gak overload
                    end
                    wait()
                end
            end)
        end
    end
})

Tabs.Auto:Section({ Title = "Plant" })

local player = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local event = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local selectedSeed = nil
local selectedRow = nil
local autoMode = false
local myPlot = nil

-- cari plot player
local function findMyPlot()
    for _, plot in ipairs(workspace.Plots:GetChildren()) do
        local sign = plot:FindFirstChild("PlayerSign")
        if sign and sign:FindFirstChild("BillboardGui") then
            local textLabel = sign.BillboardGui:FindFirstChild("TextLabel")
            if textLabel and textLabel.Text == player.DisplayName then
                return plot
            end
        end
    end
end

-- ambil info seed dari backpack atau character
local function getSeedData(seedName)
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()

    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, seedName) then
            return {
                ID = tool:GetAttribute("ID"),
                Plant = tool:GetAttribute("Plant"),
                Tool = tool,
                Name = tool.Name
            }
        end
    end

    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, seedName) then
            return {
                ID = tool:GetAttribute("ID"),
                Plant = tool:GetAttribute("Plant"),
                Tool = tool,
                Name = tool.Name
            }
        end
    end
end

-- tanam di plot
local function plantAll(seedName, rowFilter)
    local seedData = getSeedData(seedName)
    if not seedData then return end

    local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid and seedData.Tool.Parent ~= player.Character then
        humanoid:EquipTool(seedData.Tool)
        task.wait(0.2)
    end

    if not myPlot then
        myPlot = findMyPlot()
        if not myPlot then return end
    end

    for _, row in ipairs(myPlot.Rows:GetChildren()) do
        if not rowFilter or row.Name == tostring(rowFilter) then
            if row:FindFirstChild("Grass") then
                for _, grass in ipairs(row.Grass:GetChildren()) do
                    local args = {
                        {
                            {
                                ID = seedData.ID,
                                CFrame = grass.CFrame * CFrame.new(0, 1, 0),
                                Item = seedData.Plant,
                                Floor = grass
                            },
                            "\006" -- âœ… pakai RemoteEvent versi baru
                        }
                    }
                    event:FireServer(unpack(args))
                    task.wait(0.2)
                end
            end
        end
    end
end

-- Dropdown pilih seed
Tabs.Auto:Dropdown({ 
    Title = "Select Seed",  
    Values = { 
        "Cactus Seed",
        "Strawberry Seed",
        "Pumpkin Seed",
        "Sunflower Seed",
        "Dragon Fruit Seed",
        "Eggplant Seed",
        "Watermelon Seed",
        "Cocotank Seed",
        "Carnivorous Plant Seed",
        "Mr Carrot Seed", 
        "Tomatrio Seed",
        "Shroombino Seed"
    },
    Value = "",
    Callback = function(option) 
        selectedSeed = option
    end
})

-- Dropdown pilih row
Tabs.Auto:Dropdown({ 
    Title = "Select Row", 
    Values = { "All","1","2","3","4","5","6","7" },
    Value = "All",
    Callback = function(option) 
        if option == "All" then
            selectedRow = nil
        else
            selectedRow = tonumber(option)
        end
    end
})

-- Toggle auto plant
Tabs.Auto:Toggle({ 
    Title = "Auto Plant", 
    Value = false,
    Callback = function(state) 
        autoMode = state

        if autoMode then
            if not selectedSeed then return end

            task.spawn(function()
                while autoMode do
                    plantAll(selectedSeed, selectedRow)
                    task.wait(5)
                end
            end)
        end
    end
})

Tabs.Auto:Section({ Title = "Remove" })

local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local autoRemove = false
local selectedPlant = nil -- hasil pilihan dropdown

-- Fungsi cari plot milik kita
local function getMyPlot()
    for _, plot in ipairs(workspace.Plots:GetChildren()) do
        local sign = plot:FindFirstChild("PlayerSign")
        if sign and sign:FindFirstChild("BillboardGui") and sign.BillboardGui:FindFirstChild("TextLabel") then
            local textLabel = sign.BillboardGui.TextLabel
            if textLabel.Text == player.DisplayName then
                return plot
            end
        end
    end
    return nil
end

-- Fungsi hapus tanaman sesuai pilihan dropdown
local function removeSelectedPlant()
    local myPlot = getMyPlot()
    if not myPlot or not myPlot:FindFirstChild("Plants") or not selectedPlant then return end

    for _, plant in pairs(myPlot.Plants:GetChildren()) do
        if plant.Name == selectedPlant then
            local id = plant:GetAttribute("ID") or (plant:FindFirstChild("ID") and plant.ID.Value) or plant.ID
            if id then
                -- Remote baru dengan "\a"
                local args = {
                    {
                        id,
                        "\a"
                    }
                }
                dataRemoteEvent:FireServer(unpack(args))
            end
        end
    end
end

-- Dropdown untuk pilih tanaman
Tabs.Auto:Dropdown({ 
    Title = "Select Plant", 
    Values = { 
        "Cactus",
        "Strawberry",
        "Pumpkin",
        "Sunflower",
        "Dragon Fruit",
        "Eggplant",
        "Watermelon",
        "Cocotank",
        "Carnivorous Plant",
        "Mr Carrot",
        "Tomatrio",
        "Shroombino"
    },
    Value = "",
    Callback = function(option) 
        selectedPlant = option
    end
})

-- Toggle auto remove
Tabs.Auto:Toggle({
    Title = "Auto Remove Plant",
    Value = false,
    Callback = function(state)
        autoRemove = state
        if state then
            task.spawn(function()
                while autoRemove do
                    removeSelectedPlant()
                    task.wait(2) -- delay biar ga spam
                end
            end)
        end
    end
})

local TweenService = game:GetService("TweenService")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

local ImgBtn = Instance.new("ImageButton")
ImgBtn.Parent = ScreenGui
ImgBtn.Size = UDim2.new(0, 60, 0, 60)
ImgBtn.Position = UDim2.new( 0, 100, 1, -300)
ImgBtn.BackgroundTransparency = 1
ImgBtn.Image = "rbxassetid://137184014634632" -- ganti dengan gambar planet

-- Biar ujung tombol bulat/halus
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 15)
UICorner.Parent = ImgBtn

-- Toggle GUI dengan ImageButton
local isOpen = false
ImgBtn.MouseButton1Click:Connect(function()
    -- ANIMASI KLIK (scale kecil dulu baru balik normal)
    local shrink = TweenService:Create(ImgBtn, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 50, 0, 50)
    })
    local grow = TweenService:Create(ImgBtn, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 60, 0, 60)
    })

    shrink:Play()
    shrink.Completed:Wait()
    grow:Play()

    -- Toggle Window
    if isOpen then
        Window:Close()
    else
        Window:Open()
    end
    isOpen = not isOpen
end)

local UserInputService = game:GetService("UserInputService")
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    ImgBtn.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

ImgBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 
    or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = ImgBtn.Position

        -- biar bisa lepas drag kalau jari/mouse diangkat
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ImgBtn.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement 
    or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
